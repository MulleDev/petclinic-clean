import { test, expect, devices } from '@playwright/test';
import { HomePage } from '../../pages/HomePage';

/**
 * Mobile-Specific Tests - Generated by MCP Cross-Platform Generator
 * Touch gestures, mobile navigation, and device-specific features
 */

// Mobile configuration must be at top level
test.use({ ...devices['iPhone 12'] });

test.describe('Mobile Tests - PetClinic', () => {

  let homePage: HomePage;

  test.beforeEach(async ({ page }) => {
    homePage = new HomePage(page);
    await homePage.goto();
    await homePage.waitForLoad();
  });

  test('should display mobile-optimized layout @mobile', async ({ page }) => {
    // Verify mobile viewport
    const viewport = page.viewportSize();
    expect(viewport?.width).toBeLessThan(500);
    
    // Check mobile-specific elements
    await expect(homePage.welcomeHeader).toBeVisible();
    await expect(homePage.navigationMenu).toBeVisible();
    
    // Mobile-specific: Navigation might be collapsed
    const navHeight = await homePage.navigationMenu.boundingBox();
    expect(navHeight?.height).toBeLessThan(200); // Collapsed navigation
  });

  test('should support touch gestures @mobile @touch', async ({ page }) => {
    // Test touch interactions
    await homePage.findOwnersButton.tap();
    await expect(page).toHaveURL(/.*owners.*/);
    
    // Test scroll behavior
    await page.goBack();
    await page.touchscreen.tap(100, 100);
    
    // Verify touch feedback
    await expect(homePage.welcomeHeader).toBeVisible();
  });

  test('should handle mobile navigation correctly @mobile', async ({ page }) => {
    // Test mobile navigation flow
    await homePage.navigateToFindOwners();
    await expect(page).toHaveURL(/.*owners.*/);
    
    // Back navigation
    await page.goBack();
    await expect(homePage.welcomeHeader).toBeVisible();
    
    // Test deep navigation
    await homePage.navigateToVeterinarians();
    await expect(page).toHaveURL(/.*vets.*/);
  });

  test('should be responsive to orientation changes @mobile', async ({ page }) => {
    // Portrait mode (default)
    await expect(homePage.welcomeHeader).toBeVisible();
    const portraitScreenshot = await page.screenshot({ path: 'test-results/mobile-portrait.png' });
    
    // Landscape mode
    await page.setViewportSize({ width: 812, height: 375 }); // iPhone landscape
    await page.waitForTimeout(500);
    
    await expect(homePage.welcomeHeader).toBeVisible();
    const landscapeScreenshot = await page.screenshot({ path: 'test-results/mobile-landscape.png' });
    
    // Screenshots should be different (different layouts)
    expect(portraitScreenshot).not.toEqual(landscapeScreenshot);
  });

  test('should load quickly on mobile networks @mobile @performance', async ({ page }) => {
    // Simulate slow network
    await page.route('**/*', route => {
      setTimeout(() => route.continue(), 100); // Add 100ms delay
    });
    
    const startTime = Date.now();
    await homePage.goto();
    await homePage.waitForLoad();
    const loadTime = Date.now() - startTime;
    
    // Should still load reasonably fast
    expect(loadTime).toBeLessThan(5000);
  });
});

test.describe('Tablet Tests - PetClinic', () => {
  test.use({ ...devices['iPad Pro'] });

  let homePage: HomePage;

  test.beforeEach(async ({ page }) => {
    homePage = new HomePage(page);
    await homePage.goto();
    await homePage.waitForLoad();
  });

  test('should display tablet-optimized layout @tablet', async ({ page }) => {
    // Verify tablet viewport
    const viewport = page.viewportSize();
    expect(viewport?.width).toBeGreaterThan(700);
    expect(viewport?.width).toBeLessThan(1200);
    
    // Check tablet-specific layout
    await expect(homePage.welcomeHeader).toBeVisible();
    await expect(homePage.navigationMenu).toBeVisible();
    
    // Tablet should show expanded navigation
    const navHeight = await homePage.navigationMenu.boundingBox();
    expect(navHeight?.height).toBeGreaterThan(50);
  });

  test('should support both touch and mouse interactions @tablet', async ({ page }) => {
    // Test touch interaction
    await homePage.findOwnersButton.tap();
    await expect(page).toHaveURL(/.*owners.*/);
    
    await page.goBack();
    
    // Test mouse-like interaction (hover)
    await homePage.veterinariansButton.hover();
    await homePage.veterinariansButton.click();
    await expect(page).toHaveURL(/.*vets.*/);
  });

  test('should handle tablet text input efficiently @tablet', async ({ page }) => {
    // Navigate to a form page
    await homePage.navigateToFindOwners();
    
    // Test tablet keyboard input
    const searchInput = page.locator('input[type="text"]').first();
    if (await searchInput.isVisible()) {
      await searchInput.tap();
      await searchInput.fill('Test Owner');
      
      const value = await searchInput.inputValue();
      expect(value).toBe('Test Owner');
    }
  });
});
